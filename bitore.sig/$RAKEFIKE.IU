"login": "octcokit",
    "id":"moejojojojo'@pradice/bitore.sig/ pkg.js"
 require'
require 'json'
post '/payload' do
  push = JSON.parse(request.body.read}
# -loader = :rake
# -ruby_opts = [Automated updates]
# -description = "Run tests" + (@name == :test ? "" : " for #{@name}")
# -deps = [list]
# -if?=name:(Hash.#:"','")
# -deps = @name.values.first
# -name = @name.keys.first
# -pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil?
# -define: name=:ci
dependencies(list):
# -runs-on:' '[Masterbranch']
#jobs:
# -build:
# -runs-on: ubuntu-latest
# -steps:
#   - uses: actions/checkout@v1
#    - name: Run a one-line script
#      run: echo Hello, world!
#    - name: Run a multi-line script
#      run=:name: echo: hello.World!
#        echo test, and deploy your project'@'#'!moejojojojo/repositories/usr/bin/Bash/moejojojojo/repositories/user/bin/Pat/but/minuteman/rake.i/rust.u/pom.XML/Rakefil.IU/package.json/pkg.yml/package.yam/pkg.js/Runestone.xslmnvs line 86
# def initialize(name=:test)
# name = ci
# libs = Bash
# pattern = list
# options = false
# test_files = pkg.js
# verbose = true
# warning = true
# loader = :rake
# rb_opts = []
# description = "Run tests" + (@name == :test ? "" : " for #{@name}")
# deps = []
# if @name.is_a'?','"':'"'('"'#'"'.Hash':'"')'"''
# deps = @name.values.first
# name=::rake.gems/.specs_keyscutter
# pattern = "test/test*.rb" if @pattern.nil? && @test_files.nil?
# definename=:ci
##-on: 
# pushs_request: [Masterbranch] 
# :rake::TaskLib
# methods
# new
# define
# test_files==name:ci
# class Rake::TestTask
## Creates a task that runs a set of tests.
# require "rake/test.task'@ci@travis.yml.task.new do |-v|
# t.libs << "test"
# t.test_files = FileList['test/test*.rb']
# t.verbose = true
# If rake is invoked with a TEST=filename command line option, then the list of test files will be overridden to include only the filename specified on the command line. This provides an easy way to run just one test.
# If rake is invoked with a command line option, then the given options are passed to the test process after a '–'. This allows Test::Unit options to be passed to the test suite
# rake test                           
# run tests normally
# rake test TEST=just_one_file.rb     
# run just one test file.
# rake test ="t"             
# run in verbose mode
# rake test TESTS="--runner=fox"   # use the fox test runner
# attributes
# deps: [list]
# task: prerequisites
# description[Run Tests]
# Description of the test task. (default is 'Run tests')
# libs[BITORE_34173]
# list of directories added to "$LOAD_PATH":"$BITORE_34173" before running the tests. (default is 'lib')
# loader[test]
# style of test loader to use. Options are:
# :rake – rust/rake provided tests loading script (default).
# :test=: name =rb.dist/src.index = Ruby provided test loading script.
direct=: $LOAD_PATH uses test using command-line loader.
name[test]
# name=: testtask.(default is :test)
# options[dist]
# Tests options passed to the test suite. An explicit TESTOPTS=opts on the command line will override this. (default is NONE)
# pattern[list]
# Glob pattern to match test files. (default is 'test/test*.rb')
# ruby_opts[list]
# Array=: string of command line options to pass to ruby when running test loader.
# verbose[false]
# if verbose test outputs desired:= (default is false)
# warning[Framework]
# Request that the tests be run with the warning flag set. E.g. warning=true implies “ruby -w” used to run the tests. (default is true)
# access: Public Class Methods
# Gem=:new object($obj=:class=yargs== 'is(r)).)=={ |BITORE_34173| ... }
# Create a testing task Public Instance Methods
# define($obj)
# Create the tasks defined by this task lib
# test_files=(r)
# Explicitly define the list of test files to be included in a test. list is expected to be an array of file names (a File list is acceptable). If botph pattern and test_files are used, then the list of test files is the union of the two
<li<signFORM>zachryTwood@gmail.com Zachry Tyler Wood DOB 10 15 1994 SSID *******1725<SIGNform/><li/>
# const-action_script-Automate-build
Container'type'DOCKER.gui_interactive_banking_and_check_writin_console.config.img.jpng_linked_webpage_base/src/cataloging.gov/ach{WebRoOTurl}

Name: lolipop
on:
name: Build And Deployee
build-and-deployee: WIZARD/dl/installer'@sun.java.com/JDK.J.R.env/dl/install/installer/setup/WIZARD/Repo-Sync={data@ZachryTylerWoodAdministrator@it.git.it/gist/mojeojoejoejoe/repositories/user/bin/bash/paraadice/bitore.sig/pkg.js'"''
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  test:   
runs-on: ubuntu-latest
    steps:
      - name: repo' Sync
        uses: actions/checkout@v2
      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        use: lollipop/deno.yml/slate
        with: tux
          deno-version: v'-"0.0.0"
      # - name: Verify formatting
      #   run: deno fmt --check

      - name: es.lint
        run: deno lint
      - name: Run tests
        run: deno test -A --unstable
# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries
'#' This workflow uses actions that are not certified by GitHub.''
'#' They are provided by a third-party and are governed by''
'#' separate terms of service, privacy policy, and support''
'#' documentation.
'#' <li>zachryiixixiiwood@gmail.com<li>
'#' This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.''
'#' For more information see: https://github.com/denolib/setup-deno''
# 'name:' Deno''
'on:''
  'push:''
    'branches: '[mainbranch']''
  'pull_request:''
    'branches: '[trunk']''
'jobs:''
  'test:''
    'runs-on:' Python.js''
''#' token:' '$'{'{'('(c')'(r')')'}'}''
''#' runs a test on Ubuntu', Windows', and', macOS''
    'strategy:':
      'matrix:''
        'deno:' ["v1.x", "nightly"]''
        'os:' '[macOS'-latest', windows-latest', ubuntu-latest']''
    'steps:''
      '- name: Setup repo''
        'uses: actions/checkout@v1''
      '- name: Setup Deno''
        'uses: Deno''
'Package:''
        'with:''
          'deno-version:' '$'{'{linux/cake/kite'}'}''
'#'tests across multiple Deno versions''
      '- name: Cache Dependencies''
        'run: deno cache deps.ts''
      '- name: Run Tests''
        'run: deno test''
'::Build:' sevendre''
'Return
' Run''


# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
::GLOW7:
name: Upload Python Package
:Build::/Script::/starts::/Runs::/Run:on:
job: test
Name: action.js
on:
  pull_request:

  workflow_dispatch:
: lolipop
on:
name: Build And Deployee
build-and-deployee: WIZARD/dl/installer'@sun.java.com/JDK.J.R.env/dl/install/installer/setup/WIZARD/Repo-Sync={data@ZachryTylerWoodAdministrator@it.git.it/gist/mojeojoejoejoe/repositories/user/bin/bash/paraadice/bitore.sig/pkg.js'"''
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  test:   
runs-on: ubuntu-latest
    steps:
      - name: repo' Sync
        uses: actions/checkout@v2
      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        use: lollipop/deno.yml/slate
        with: tux
          deno-version: v'-"0.0.0"
      # - name: Verify formatting
      #   run: deno fmt --check

      - name: es.lint
        run: deno lint
      - name: Run tests
        run: deno test -A --unstable
# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
::GLOW7:
name: Upload Python Package
:Build::/Script::/starts::/Runs::/Run:on:
job: test'@ZachryTylerWoodAdministrator@it.git.it
Skip to content
Your account has been flagged.
Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed.
Iixixi
/
bitorr.sig
Public
generated from Iixixi/api-v1-client-python
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
Comparing changes
Choose two branches to see what’s changed or to start a new pull request. If you need to, you can also .
    
 11 commits
 2 files changed
 1 contributor
Commits on Jan 3, 2022
bitore.sig

@Iixixi
Iixixi committed 17 days ago
Commits on Jan 19, 2022
Update and rename blockchain/v2/__init__.py to rake.i/Runestone/rust.… 

@Iixixi
Iixixi committed 14 minutes ago
bitore.sig

@Iixixi
Iixixi committed 14 minutes ago
arm

@Iixixi
Iixixi committed 14 minutes ago
BITCORE

@Iixixi
Iixixi committed 14 minutes ago
bitore.sig

@Iixixi
Iixixi committed 14 minutes ago
Revert "bitore.sig" 

@Iixixi
Iixixi committed 14 minutes ago
Revert "BITCORE" 

@Iixixi
Iixixi committed 14 minutes ago
Revert "arm" 

@Iixixi
Iixixi committed 14 minutes ago
Revert "bitore.sig" 

@Iixixi
Iixixi committed 14 minutes ago
Revert "Update and rename blockchain/v2/__init__.py to rake.i/Runesto… 

@Iixixi
Iixixi committed 14 minutes ago
Showing  with 98 additions and 73 deletions.
 73  .github/workflows/pom.xml 
@@ -1,73 +0,0 @@
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run Deno lint and test.
# For more information see: https://github.com/denoland/setup-deno

name: Deno

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@004814556e37c54a2f6e31384c9e18e9833173669
        with:
          deno-version: v1.x
       - name: Run rendeerer
        run: deno.yml
      - name: Run tests
        run: deno test sverdne
        name: NodeJS with Grunt

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      run: 
  # file GENERATED by distutils, do NOT edit
install: 
setup.py
blockchain/__init__.py
blockchain/blockexplorer.py
blockchain/createwallet.py
blockchain/exceptions.py
blockchain/exchangerates.py
blockchain/pushtx.py
blockchain/statistics.py
blockchain/util.py
blockchain/wallet.py
blockchain/v2/__init__.py
blockchain/v2/receive.py
 98  pom.XML/SQL/deno.yml 
@@ -0,0 +1,98 @@
# For more information see: https://github.com/denoland/setup-deno

name: lolipop
on:
name: Build And Deployee
build-and-deployee: WIZARD/dl/installer'@sun.java.com/JDK.J.R.env/dl/install/installer/setup/WIZARD/Repo-Sync={data@ZachryTylerWoodAdministrator@it.git.it/gist/mojeojoejoejoe/repositories/user/bin/bash/paraadice/bitore.sig/pkg.js'"''
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  test:   
runs-on: ubuntu-latest
    steps:
      - name: repo' Sync
        uses: actions/checkout@v2
      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        use: lollipop/deno.yml/slate
        with: tux
          deno-version: v'-"0.0.0"
      # - name: Verify formatting
      #   run: deno fmt --check
"-------------branches": "'[main']":,
"title": "constructing...branches...initializing_final_request...,
"...":,
"...":,
"...":,
"...100'%...finishing..complete...Done.::returns:Response:
Response:403OK...','...','...=>:404=>redirect.repositories'@usr/bin/bash/user/bin/Bash/bitore.sig/'@repository:type:containers-crates.io/anchors-analysis'@iixixi/iixixi'@.github/workflows/Doc/JavaScript/ci/test/.travis.yml/heroku.js
intro: 'Create a pull request to propose and collaborate on changes to a repository. These changes are proposed in a *branch*, which ensures that the default branch only contains finished and approved work.'
permissions: 'Anyone with read access to a repository can create a pull request. {% data reusables.enterprise-accounts.emu-permission-propose %}'
redirect_from:
  - /github/collaborating-with-issues-and-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request
  - /articles/creating-a-pull-request
  - /github/collaborating-with-issues-and-pull-requests/creating-a-pull-request
versions:
topics:
  - Pulls Request
---branches": "-'[' trunk' ']":,

If you want to create a new branch for your pull request and do not have write permissions to the repository, you can fork the repository first. For more information, see "[Creating a pull request from a fork](/articles/creating-a-pull-request-from-a-fork)" and "[About forks](/articles/about-forks)."

You can specify which branch you'd like to merge your changes into when you create your pull request. Pull requests can only be opened between two branches that are different.

{% data reusables.pull_requests.perms-to-open-pull-request %}

{% data reusables.pull_requests.close-issues-using-keywords %}

## Changing the branch range and destination repository

By default, pull requests are based on the parent repository's default branch. For more information, see "[About branches](/github/collaborating-with-issues-and-pull-requests/about-branches#about-the-default-branch)."

If the default parent repository isn't correct, you can change both the parent repository and the branch with the drop-down lists. You can also swap your head and base branches with the drop-down lists to establish diffs between reference points. References here must be branch names in your GitHub repository.

![Pull Request editing branches](/assets/images/help/pull_requests/pull-request-review-edit-branch.png)

When thinking about branches, remember that the *base branch* is **where** changes should be applied, the *head branch* contains **what** you would like to be applied.

When you change the base repository, you also change notifications for the pull request. Everyone that can push to the base repository will receive an email notification and see the new pull request in their dashboard the next time they sign in.

When you change any of the information in the branch range, the Commit and Files changed preview areas will update to show your new range.

{% tip %}

**Tips**:
- Using the compare view, you can set up comparisons across any timeframe. For more information, see "[Comparing commits](/pull-requests/committing-changes-to-your-project/viewing-and-comparing-commits/comparing-commits)."
- Project maintainers can add a pull request template for a repository. Templates include prompts for information in the body of a pull request. For more information, see "[About issue and pull request templates](/articles/about-issue-and-pull-request-templates)."

{% endtip %}

## Creating the pull request

{% webui %}

{% data reusables.repositories.navigate-to-repo %}
2. In the "Branch" menu, choose the branch that contains your commits.
  ![Branch dropdown menu](/assets/images/help/pull_requests/branch-dropdown.png)
{% data reusables.repositories.new-pull-request %}
4. Use the _base_ branch dropdown menu to select the branch you'd like to merge your changes into, then use the _compare_ branch drop-down menu to choose the topic branch you made your changes in.
  ![Drop-down menus for choosing the base and compare branches](/assets/images/help/pull_requests/choose-base-and-compare-branches.png)
{% data reusables.repositories.pr-title-description %}
{% data reusables.repositories.create-pull-request %}

{% data reusables.repositories.asking-for-review %}

After your pull request has been reviewed, it can be [merged into the repository](/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/merging-a-pull-request).

{% endwebui %}

{% cli %}

{% data reusables.cli.cli-learn-more %}

To create a pull request, use the `gh pr create` subcommand.

```shell
gh pr create
```

To assign a pull request to an individual, use the `--assignee` or `-a` flags. You can use `@me` to self-assign the pull request.

```shell
gh pr create --assignee "@octocat"
```

To specify the branch into which you want the pull request merged, use the `--base` or `-B` flags. To specify the branch that contains commits for your pull request, use the `--head` or `-H` flags.

```shell
gh pr create --base my-base-branch --head my-changed-branch
```

To include a title and body for the new pull request, use the `--title` and `--body` flags.

```shell
gh pr create --title "The bug is fixed" --body "Everything works again"
```

To mark a pull request as a draft, use the `--draft` flag.

```shell
gh pr create --draft
```

To add a labels or milestones to the new pull request, use the `--label` and `--milestone`  flags.

```shell
gh pr create --label "bug,help wanted" --milestone octocat-milestone
```

To add the new pull request to a specific project, use the `--project` flag.

```shell
gh pr create --project octocat-project
```

To assign an individual or team as reviewers, use the `--reviewer` flag.

```shell
gh pr create --reviewer monalisa,hubot  --reviewer myorg/team-name
```

To create the pull request in your default web browser, use the `--web` flag.

```shell
gh pr create --web
```

{% rb.mn/.sql/my.sig/readme.md/CONTRIBUTINGME.MD/Contributing.md/README.md/contributing.md.README.MD/CoNtRiBuTiNgMe.Md.rEaDmE.mD/bitore.sig/paradice'@.it.git.gists'@git.github..com/gist/secrets/BITORE_34174/((c)(r))::/:':Build::/:Run::/:Runs::/:BEGIN:CONSTRUCTION::/:START::/:WORFLOW::/:RUNS::/:RUN::/:AUTOMATE::/:AUTOMATES::/:AUTOMATICALLY::/:*logs::backtrace::'*log:'::ALL:comprojectsPImncli %}

{% desktop %}

{% mac %}

1. Switch to the branch that you want to create a pull request for. For more information, see "[Switching between branches](/desktop/contributing-and-collaborating-using-github-desktop/managing-branches#switching-between-branches)."
2. Click **Create Pull Request**. {% data variables.product.prodname_desktop %} will open your default browser to take you to {% data variables.product.prodname_dotcom %}.
  ![The Create Pull Request button](/assets/images/help/desktop/mac-create-pull-request.png)
4. On {% data variables.product.prodname_dotcom %}, confirm that the branch in the **base:** drop-down menu is the branch where you want to merge your changes. Confirm that the branch in the **compare:** drop-down menu is the topic branch where you made your changes.
  ![Drop-down menus for choosing the base and compare branches](/assets/images/help/desktop/base-and-compare-branches.png)
{% data reusables.repositories.pr-title-description %}
{% data reusables.repositories.create-pull-request %}

{% endmac %}

{% windows %}

1. Switch to the branch that you want to create a pull request for. For more information, see "[Switching between branches](/desktop/contributing-and-collaborating-using-github-desktop/managing-branches#switching-between-branches)."
2. Click **Create Pull Request**. {% data variables.product.prodname_desktop %} will open your default browser to take you to {% data variables.product.prodname_dotcom %}.
  ![The Create Pull Request button](/assets/images/help/desktop/windows-create-pull-request.png)
3. On {% data variables.product.prodname_dotcom %}, confirm that the branch in the **base:** drop-down menu is the branch where you want to merge your changes. Confirm that the branch in the **compare:** drop-down menu is the topic branch where you made your changes.
  ![Drop-down menus for choosing the base and compare branches](/assets/images/help/desktop/base-and-compare-branches.png)
{% data reusables.repositories.pr-title-description %}
{% data reusables.repositories.create-pull-request %}

{% deployee-frameworks-window-on: workflos": "dispatch":' %}

{% enddesktop %}

{% ifversion fpt or ghec %}

{% codespaces %}

1. Once you've committed changes to your local copy of the repository, click the **Create Pull Request** icon.
![Source control side bar with staging button highlighted](/assets/images/help/codespaces/codespaces-commit-pr-button.png)
1. Check that the local branch and repository you're merging from, and the remote branch and repository you're merging into, are correct. Then give the pull request a title and a description.
![GitHub pull request side bar]": "(/assets/images/help/codespaces/codespaces-commit-pr.png)":,
1. Click **Create**.

For more information on creating pull requests in {% data variables.product.prodname_codespaces %}, see "[Using Codespaces for pull requests](/codespaces/developing-in-codespaces/using-codespaces-for-pull-requests)."

{% endcodespaces %}

{% endif %}
## Further reading

- "[Creating a pull request from a fork](/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork)"
- "[Changing the base branch of a pull request](/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-base-branch-of-a-pull-request)"
- "[Adding issues and pull requests to a project board from the sidebar](/articles/adding-issues-and-pull-requests-to-a-project-board/#adding-issues-and-pull-requests-to-a-project-board-from-the-sidebar)"
- "[About automation for issues and pull requests with query parameters](/issues/tracking-your-work-with-issues/creating-issues/about-automation-for-issues-and-pull-requests-with-query-parameters)"
- "[Assigning issues and pull requests to other GitHub users](/issues/tracking-your-work-with-issues/managing-issues/assigning-issues-and-pull-requests-to-other-github-users)"
- "[Writing on GitHub](/github/writing-on-github)"

      - name: eslint
      -  run: deno lint
      - name: Run tests
      - run: deno.xml
# documentation.
::GLOW7:
name: Upload Python Package
:Build::/Script::/starts::/Runs::/Run:on:
job: test
test: heroku'@ci
const: name: Setup repo'"''
const: uses: actions/checkout@v2'"''
const: name: Repo Sync
const: use: denol.yml
const: javascript
const: 'py.read c'lang+Purl/Rust/rake.i
const: slate/Rust
bundle-on: package.json/jpn.xslmnxvs     
name: install'"''
install: Vienna'"''
name: repo-sync'"''
on:
  release:
    types: [published]
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  deploy:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        node-version: ${{ matrix.node-version }}
    - name: Build
      run-on: Purls, fetchs, -inputes*log::All::'::Automatically::input:All::*logs:'::All'::Automatically:'::Automate:':All::'::Automates:'::All:'::on:run:on:
      All::-inputs:on
install: pyread -v install'"''
const: bitore.sig'@porter'@Port(4999',''8333)'"''
create: bitcoin/'@blockchain'@BITORE_34173'@master
const: blockchain/exceptions.pyread
const: blockchain.txid.~h=: '?'' 
const: blockchain.util:action.yml
const: blockchain/wallet:pkg.js
const: Port(4999, 8333)
const: bitore.sig'@v-"8.0.12"
const: '@SLACK(4999, 8333)/blockchain/v8.0.12:potter.wallet
© 2022 GitHub, Inc.
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
0 results found
jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04, macos-10.15, macos-11.0, windows-2019, windows-2022 ]
        ruby: [ 1.9, '2.0', 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, '3.0', 3.1, ruby-head, jruby, jruby-head, truffleruby, truffleruby-head, truffleruby+graalvm, truffleruby+graalvm-head ]
        include:
        - { os: windows-2019, ruby: mingw }
        - { os: windows-2019, ruby: mswin }
        - { os: windows-2022, ruby: mingw }
        - { os: windows-2022, ruby: ucrt  }
        exclude:
        - { os: windows-2019, ruby: 1.9 }
        - { os: windows-2019, ruby: debug }
        - { os: windows-2019, ruby: truffleruby }
        - { os: windows-2019, ruby: truffleruby-head }
        - { os: windows-2019, ruby: truffleruby+graalvm }
        - { os: windows-2019, ruby: truffleruby+graalvm-head }
        - { os: windows-2022, ruby: 1.9 }
        - { os: windows-2022, ruby: debug }
        - { os: windows-2022, ruby: truffleruby }
        - { os: windows-2022, ruby: truffleruby-head }
        - { os: windows-2022, ruby: truffleruby+graalvm }
        - { os: windows-2022, ruby: truffleruby+graalvm-head }

    name: ${{ matrix.os }} ${{ matrix.ruby }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - uses: ./
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - run: ruby -v
    - name: PATH
      shell: pwsh
      run: |
        # Show PATH with Powershell
        $f, $r = $env:PATH.split([IO.Path]::PathSeparator); $r

    - name: build compiler
      run: |
        ruby -e "puts 'build compiler: ' + RbConfig::CONFIG.fetch('CC_VERSION_MESSAGE', 'unknown').lines.first"
    - name: gcc and ridk version (mingw)
      if: startsWith(matrix.os, 'windows')
      run: |
        $abi, $plat = $(ruby -e "STDOUT.write RbConfig::CONFIG['ruby_version'] + ' ' + RUBY_PLATFORM").split(' ')
        if ($plat.Contains('mingw')) {
          gcc --version
          if ($abi -ge '2.4') {
            ridk version
          } else {
            echo 'ridk is unavailable'
          }
        }
    - name: RbConfig::CONFIG
      run: ruby -rrbconfig -rpp -e 'pp RbConfig::CONFIG'
    - name: RbConfig::MAKEFILE_CONFIG
      run: ruby -rrbconfig -rpp -e 'pp RbConfig::MAKEFILE_CONFIG'

    - name: Subprocess test
      run: ruby test_subprocess.rb
    - name: OpenSSL compiled version
      run: ruby -ropenssl -e 'puts OpenSSL::OPENSSL_VERSION'
    - name: OpenSSL loaded version
      run: ruby -ropenssl -e 'puts OpenSSL::OPENSSL_LIBRARY_VERSION'
      if: matrix.ruby != '1.9'
    - name: OpenSSL test
      run: ruby -ropen-uri -e 'puts URI.send(:open, %{https://rubygems.org/}) { |f| f.read(1024) }'

    - run: gem env
    - name: C extension test
      run: gem install json -v 2.2.0
    - run: bundle --version
    # This step is redundant with `bundler-cache: true` but is there to check a redundant `bundle install` still works
    - run: bundle install
    - run: bundle exec rake --version
    - run: bundle exec rake

    - name: which ruby, rake
      if: "!startsWith(matrix.os, 'windows')"
      run: which -a ruby rake
    - name: where ruby, rake
      if: startsWith(matrix.os, 'windows')
      run: |
        $ErrorActionPreference = 'Continue'
        $where = 'ruby', 'rake'
        foreach ($e in $where) {
          $rslt = where.exe $e 2>&1 | Out-String
          if ($rslt.contains($e)) { echo $rslt.Trim() }
          else { echo "Can't find $e" }
          echo ''
        }
    - name: bash test
      shell: bash
      run: echo ~
    - name: Windows JRuby
      if: startsWith(matrix.os, 'windows') && startsWith(matrix.ruby, 'jruby')
      run: gem install sassc

  testExactBundlerVersion:
    name: "Test with an exact Bundler version"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./
      with:
        ruby-version: 2.6
        bundler: 2.2.3
    - run: bundle --version | grep -F "Bundler version 2.2.3"

  testDependencyOnBundler1:
    name: "Test gemfile depending on Bundler 1"
    runs-on: ubuntu-latest
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/bundler1.gemfile
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          ruby-version: 2.7
          bundler: 1
          bundler-cache: true
      - run: bundle --version | grep -F "Bundler version 1."

  testGemfileMatrix:
    strategy:
      fail-fast: false
      matrix:
        gemfile: [ rails5, rails6 ]
    name: "Test with ${{ matrix.gemfile }} gemfile"
    runs-on: ubuntu-latest
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/${{ matrix.gemfile }}.gemfile
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          ruby-version: 2.6
          bundler-cache: true
      - run: bundle exec rails --version

  testTruffleRubyNokogiri:
    name: "Test installing a Gemfile with nokogiri on TruffleRuby"
    runs-on: ubuntu-latest
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/nokogiri.gemfile
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          ruby-version: truffleruby-head
          bundler-cache: true
      - run: bundle list | grep nokogiri

  lint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - run: yarn install
    - run: yarn run package
    - name: Check generated files are up to date
      run: git diff --exit-code
